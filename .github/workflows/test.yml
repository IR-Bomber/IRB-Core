name: Test

on:
  workflow_call:

jobs:
  test:
    name: Run Go Tests
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read  # Minimal required permissions

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]  # Add support for multiple architectures

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Verify Go installation
        run: go version

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        if: runner.os == 'Linux'

      - name: Run Go tests (Linux) inside Docker
        run: |
          docker run --rm -v $PWD:/go/src/github.com/M-logique/Iran-Bomber-Core -w /go/src/github.com/M-logique/Iran-Bomber-Core golang:1.22 bash -c "GOARCH=${{ matrix.arch }} go mod tidy && go test ./... -v"
        if: runner.os == 'Linux'

      - name: Run Go tests (MacOS)
        run: |
          export GOARCH=${{ matrix.arch }}
          go mod tidy
          go test ./... -v
        if: runner.os == 'macOS'


      - name: Run Go tests (Windows)
        run: |
          set GOARCH=${{ matrix.arch }}
          go mod tidy
          go test ./... -v
        if: runner.os == 'Windows'
